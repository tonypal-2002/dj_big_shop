# Generated by Django 5.1.1 on 2024-09-14 14:21

import backend.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('image_path', models.ImageField(blank=True, default='No_image_available.jpg', null=True, upload_to='brands')),
                ('status', models.CharField(choices=[('PUBLISHED', 'PUBLISHED'), ('DRAFT', 'DRAFT'), ('PENDING', 'PENDING')], default='PUBLISHED', max_length=255)),
            ],
            options={
                'db_table': 'brand',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('buying_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('expected_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('earned_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('image_path', models.ImageField(blank=True, default='No_image_available.jpg', null=True, upload_to='brands')),
                ('status', models.CharField(choices=[('PUBLISHED', 'PUBLISHED'), ('DRAFT', 'DRAFT'), ('PENDING', 'PENDING')], default='PUBLISHED', max_length=255)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('PUBLISHED', 'PUBLISHED'), ('DRAFT', 'DRAFT'), ('PENDING', 'PENDING')], default='PUBLISHED', max_length=255)),
            ],
            options={
                'db_table': 'collection',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('never_expired', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('COUPON_CODE', 'COUPON_CODE'), ('PROMOTION', 'PROMOTION')], default='COUPON_CODE', max_length=255)),
            ],
            options={
                'db_table': 'discount',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('PROCESSING', 'PROCESSING'), ('ACTIVE', 'ACTIVE'), ('HIDE', 'HIDE')], default='PROCESSING', max_length=255)),
            ],
            options={
                'db_table': 'label',
            },
        ),
        migrations.CreateModel(
            name='NewsLetter',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('status', models.CharField(choices=[('SUBSCRIBE', 'SUBSCRIBE'), ('UNSUBSCRIBE', 'UNSUBSCRIBE')], default='SUBSCRIBE', max_length=255)),
            ],
            options={
                'db_table': 'news_letter',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('PUBLISHED', 'PUBLISHED'), ('DRAFT', 'DRAFT'), ('PENDING', 'PENDING')], default='PUBLISHED', max_length=255)),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('image', backend.models.GenderedImageField(blank=True, upload_to='profile/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('image_path', models.ImageField(blank=True, default='No_image_available.jpg', null=True, upload_to='company')),
                ('status', models.CharField(choices=[('PUBLISHED', 'PUBLISHED'), ('DRAFT', 'DRAFT'), ('PENDING', 'PENDING')], default='PUBLISHED', max_length=255)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('order_status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('DELIVERY', 'Delivery')], default='PENDING', max_length=255)),
                ('payment_method', models.CharField(choices=[('CASH', 'CASH'), ('UPI', 'UPI'), ('CARD', 'ON_BACK_ORDER')], default='CASH', max_length=255)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('alert_stock', models.IntegerField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('min_order_qty', models.IntegerField(blank=True, null=True)),
                ('max_order_qty', models.IntegerField(blank=True, null=True)),
                ('stock_status', models.CharField(choices=[('IN_STOCK', 'IN_STOCK'), ('OUT_OF_STOCK', 'OUT_OF_STOCK'), ('ON_BACK_ORDER', 'ON_BACK_ORDER')], default='IN_STOCK', max_length=255)),
                ('status', models.CharField(choices=[('PUBLISHED', 'PUBLISHED'), ('DRAFT', 'DRAFT'), ('PENDING', 'PENDING')], default='PUBLISHED', max_length=255)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.brand')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qty', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.IntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='backend.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.product')),
            ],
            options={
                'db_table': 'orderitem',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qty', models.IntegerField()),
                ('product_image', models.ImageField(blank=True, default='No_image_available.jpg', null=True, upload_to='carts')),
                ('custom_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.product')),
            ],
            options={
                'db_table': 'cart',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.category')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
            ],
            options={
                'db_table': 'product_category',
                'unique_together': {('product', 'category')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='categories',
            field=models.ManyToManyField(related_name='products', through='backend.ProductCategory', to='backend.category'),
        ),
        migrations.CreateModel(
            name='ProductCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.collection')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
            ],
            options={
                'db_table': 'product_collection',
                'unique_together': {('product', 'collection')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='productCollection',
            field=models.ManyToManyField(related_name='collections', through='backend.ProductCollection', to='backend.collection'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='No_image_available.jpg', upload_to='product_images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='backend.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.label')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
            ],
            options={
                'db_table': 'product_label',
                'unique_together': {('product', 'label')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='productLabel',
            field=models.ManyToManyField(related_name='labels', through='backend.ProductLabel', to='backend.label'),
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('buying_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('expected_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('earned_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('image_path', models.ImageField(blank=True, default='No_image_available.jpg', null=True, upload_to='brands')),
                ('measurement_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('current_qty', models.IntegerField(blank=True, null=True)),
                ('reorder_level', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PUBLISHED', 'PUBLISHED'), ('DRAFT', 'DRAFT'), ('PENDING', 'PENDING')], default='PUBLISHED', max_length=255)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.category')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.company')),
            ],
            options={
                'db_table': 'sub_category',
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tag')),
            ],
            options={
                'db_table': 'product_tag',
                'unique_together': {('product', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='productTag',
            field=models.ManyToManyField(related_name='tags', through='backend.ProductTag', to='backend.tag'),
        ),
    ]
